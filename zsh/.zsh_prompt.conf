# Enable substitution in the prompt.
setopt prompt_subst

# Function to get the current Git branch name and file status with counts
function git_prompt_information() {
    # Get the current branch name
    branch=$(git symbolic-ref HEAD 2>/dev/null | awk 'BEGIN{FS="/"} {print $NF}')
    
    if [[ -n "$branch" ]]; then
        # Get the git status
        _status=$(git status --porcelain)
        
        # Initialize variables to track file statuses and counts
        modified=0
        added=0
        deleted=0
        
        # Loop through the status and categorize changes
        while IFS= read -r line; do
            case $line in
                " M"*) ((modified++)) ;;   # Count modified files
                "A "*) ((added++)) ;;      # Count added files
                " D"*) ((deleted++)) ;;    # Count deleted files
            esac
        done <<< "$_status"
       
        behind=$(git rev-list --count HEAD..origin/$branch 2>/dev/null)
        ahead=$(git rev-list --count origin/$branch..HEAD 2>/dev/null)
        
        # Format the status with counts for each category
        status_text=""
        if ((modified > 0)); then status_text+="$modified✏️"; fi
        if ((added > 0)); then status_text+="$added➕"; fi
        if ((deleted > 0)); then status_text+="$deleted❌"; fi
         # Commit status with numbers and arrows for push/pull
        if ((ahead > 0)); then status_text+="$ahead⬆️ "; fi
        if ((behind > 0)); then status_text+="$behind⬇️ "; fi
        
        # Return the formatted branch name and status with counts
        echo " ($branch - $status_text)"
    fi
}


# Customize the zsh prompt to show the current directory
PROMPT='%F{green}%~%f%# $(git_prompt_information)  '
